INTEGER(mi_integer):=5123412;
CHARACTER(mi_character3):='a';
BOOLEAN(mi_boolean):=TRUE;
BOOLEAN(mi_boolean):=FALSE;
FUNCTION(mi_function)
ENDFUNCTION(mi_function)
LESS_THAN({mi_integer},6);
LESS_THAN(6,6);
LESS_THAN(6,{mi_integer});
GREATER_THAN({mi_integer},6);
GREATER_THAN(6,6);
GREATER_THAN(6,{mi_integer});
EQUALS({mi_integer},6);
EQUALS(6,6);
EQUALS(6,{mi_integer});
NOT_EQUALS({mi_integer},6);
NOT_EQUALS(6,6);
NOT_EQUALS(6,{mi_integer});
IF(TRUE)
ENDIF
IF(FALSE)
ENDIF
IF({mi_boolean})
ENDIF
IF(LESS_THAN(6,6))
ENDIF
IF(GREATER_THAN(6,6))
ENDIF
IF(EQUALS({mi_integer},6))
ENDIF
IF(NOT_EQUALS({mi_integer},6))
ENDIF
WHILE(TRUE)
ENDWHILE
WHILE(FALSE)
ENDWHILE
IF({mi_boolean})
ENDWHILE
WHILE(LESS_THAN(6,6))
ENDWHILE
WHILE(GREATER_THAN(6,6))
ENDWHILE
WHILE(EQUALS({mi_integer},6))
ENDWHILE
WHILE(NOT_EQUALS({mi_integer},6))
ENDWHILE
ADD({mi_integer},6);
LESS({mi_integer},6);
DIVIDE({mi_integer},6);
MULTIPLY({mi_integer},6);
<mi_integer>:=ADD(6,6);
<mi_integer>:=LESS(6,6);
<mi_integer>:=DIVIDE(6,6);
<mi_integer>:=MULTIPLY(6,6);
<mi_boolean>:=LESS_THAN(6,6);
<mi_boolean>:=GREATER_THAN(6,6);
<mi_boolean>:=EQUALS(6,6);
<mi_boolean>:=NOT_EQUALS(6,6);

asdfasd
fa
sdf
asdf
asd
f

